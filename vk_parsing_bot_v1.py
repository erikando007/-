import telebot
from telebot import types
import requests
from datetime import datetime
import requests

#–¢–æ–∫–µ–Ω—ã
bot = telebot.TeleBot('6126109448:AAHoIcLe8it1cA20SwZH6ZKkdMabIme2OFU')
token='d06b7235d06b7235d06b723524d37851d6dd06bd06b7235b47c4e741f6dc2323508c054'

#–°—á—ë—Ç—á–∏–∫–∏
count=0
count2=0
count1=0
count3=0
v=0

#–°–±–æ—Ä—â–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

result=''
finally_result=''
posts={}
a=''
keyboard=''
pars=''
photo_list=[]
n=''
src=''
res1=0
owner_id=''
url_for_pop=''
start_or_stop=0
criteries=0

#–§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
class Pars():

    def start(): #–§—É–Ω–∫—Ü–∏—è –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏
        try:
            global result,posts,owner_id,src,token

            if owner_id.replace('https://vk.com/wall','')==owner_id:

                if owner_id.replace('https://vk.com/id','')!=owner_id: #–ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ id
                    owner_id=owner_id.replace('https://vk.com/id','')

                elif owner_id.replace('https://vk.com/club','')!=owner_id: #–ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–ª—É–±
                    owner_id='-'+ owner_id.replace('https://vk.com/club','')

                elif owner_id.replace('https://vk.com/public','')!=owner_id: #–ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ —Å –ø—É–±–ª–∏–∫–æ–º
                    owner_id='-'+owner_id.replace('https://vk.com/public','')

                url=f'https://api.vk.com/method/wall.get?owner_id={owner_id}&access_token={token}&v=5.81' #–°–æ–∑–¥–∞–Ω–∏–µ url –¥–ª—è 3 —Å–ª—É—á–∞–µ–≤
                src=requests.get(url).json()
                posts=src['response']

            else:
            
                if owner_id.replace('https://vk.com/wall','')!=owner_id: #–ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç
                    owner_id=owner_id.replace('https://vk.com/wall','')
                    url=f'https://api.vk.com/method/wall.getById?posts={owner_id}&access_token={token}&v=5.81'

                    req=requests.get(url)
                    src=req.json()
                    result=src['response'][0]


                else: #–ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∏ –∫ —á–µ–º—É –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç
                    owner_id=owner_id.replace('https://vk.com/','') 
                    url1=f'https://api.vk.com/method/wall.get?domain={owner_id}&access_token={token}&v=5.81'

                    req=requests.get(url1)
                    src=req.json()
                    posts=src['response']

                    owner_id=posts['items'][0]['owner_id']


            return 'b'
        
        except:
            return '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π url'


    def information(): #–§—É–Ω–∫—Ü–∏—è –ø–æ –ø–æ–∏—Å–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å –ø–æ—Å—Ç–∞
        global result,finally_result,photo_list,token,v,start_or_stop

        photo_list=[]
        if 'copy_history' in result: #–ï—Å–ª–∏ –≤ –ø–æ—Å—Ç–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏—Å—Ç–æ—Ä–∏—è –æ—Ç –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

            result1=f"–¢–µ–∫—Å—Ç –∞–≤—Ç–æ—Ä–∞:\n {dict(result)['text']}\n –¢–µ–∫—Å—Ç –æ—Ç –¥—Ä—É–≥–æ–π –≥—Ä—É–ø–ø—ã –≤ —ç—Ç–æ–º –ø–æ—Å—Ç–µ: \n{result['copy_history'][0]['text']}\n".replace('\n\n','\n')
            atach=dict(result['copy_history'][0])['attachments']
                                                
            if len(atach)==2:

                if atach[0]['type']=='photo':
                    photo_list.append(g['photo']['sizes'][-1]['url'])
                    v=1

                if atach[0]['type']=='video':
                    result1= '–í–∏–¥–µ–æ –≤—Ä–µ–º–µ–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n'+result1

            else:
                error=''
                for gf in range(len(atach)):

                    d=atach[gf]
                    if d['type']=='photo':
                        photo_list.append(d['photo']['sizes'][-1]['url'])
                        v=1

                    if d['type']=='video':
                        error='–í–∏–¥–µ–æ –≤—Ä–µ–º–µ–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n'
                result1=error+result1
        else:
            result1=f"–¢–µ–∫—Å—Ç –∞–≤—Ç–æ—Ä–∞:\n {dict(result)['text']}\n".replace('\n\n','\n')
            g=dict(result)['attachments']

            if len(atach)==2:

                if atach[0]['type']=='photo':
                    photo_list.append(g['photo']['sizes'][-1]['url'])
                    v=1
                if atach[0]['type']=='video':
                    result1= '–í–∏–¥–µ–æ –≤—Ä–µ–º–µ–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n'+result1

            else:
                error=''
                for gf in range(len(atach)):

                    d=atach[gf]
                    if d['type']=='photo':
                        photo_list.append(d['photo']['sizes'][-1]['url'])
                        v=1

                    if d['type']=='video':
                        error='–í–∏–¥–µ–æ –≤—Ä–µ–º–µ–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n'
                result1=error+result1

        if 'views' in result:
            result2=f"–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {dict(result)['views']['count']}"

        result3=f"–õ–∞–π–∫–∏: {dict(result)['likes']['count']}"
        result4=f"–†–µ–ø–æ—Å—Ç—ã: {dict(result)['reposts']['count']}"
        result5=f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {dict(result)['comments']['count']}"
        result6=f"–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {datetime.utcfromtimestamp(result['date']).strftime('%Y %m %d ') }"

        finally_result='\n'+result1+'\n'+result2+'\n'+result3+'\n'+result4+'\n'+result5+'\n'+result6
        return finally_result

    def how_many_posts(): #–§—É–Ω–∫—Ü–∏—è –ø–æ –ø–æ–¥—Å—á—ë—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å –ø–æ—Å—Ç–æ–≤
        global posts,finally_result

        finally_result=f"–ö–æ–ª-–≤–æ –ø–æ—Å—Ç–æ–≤: {posts['count']}"
        return finally_result


    def pop(): #–§—É–Ω–∫—Ü–∏—è –ø–æ –ø–æ–∏—Å–∫—É –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
        global token,owner_id,src,url_for_pop,start_or_stop,criteries

        if start_or_stop==1: #–ü–æ –∫–∞–∫–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –±—É–¥–µ—Ç –æ—Ç–±–∏—Ä–∞—Ç—å—Å—è –ø–æ—Å—Ç—ã

            if criteries=='likes':
                name='\n –ö–æ–ª-–≤–æ –ª–∞–π–∫–æ–≤: '
            elif criteries=='reposts':
                name='\n –ö–æ–ª-–≤–æ —Ä–µ–ø–æ—Å—Ç–æ–≤: '
            elif criteries=='views':
                name='\n –ö–æ–ª-–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: '
            elif criteries=='comments':
                name='\n –ö–æ–ª-–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: '

            start_or_stop=0
            offset=0
            req=requests.get(f'https://api.vk.com/method/wall.get?owner_id={owner_id}&count=40&access_token={token}&v=5.81&extended=1')
            src=req.json()
            all_posts=[]
            posts_for1=src['response']['count']
            pop_id={}

            while offset<posts_for1: #–¶–∏–∫–ª –∫–æ—Ç–æ—ã–π –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è –ø–æ –Ω–µ –±—É–¥—É—Ç –≤–Ω–µ—Å–µ–Ω—ã –≤—Å–µ –ø–æ—Å—Ç—ã
                url=f'https://api.vk.com/method/wall.get?owner_id={owner_id}&count=100&access_token={token}&v=5.81&extended=1&count=100&offset={offset}'
                offset+=100 #–ö–∞–∂–¥—ã–π —Ä–∞–∑ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –ø–æ 100 –ø–æ—Å—Ç–æ–≤
                req=requests.get(url)
                src=req.json()

                for pop_likes in src['response']['items']:
                    if 'views' in pop_likes: #–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–∞–∂–¥–æ–º—É –ø–æ—Å—Ç—É
                        pop_id[f"{pop_likes['id']}"]=int(f"{pop_likes[criteries]['count']}")
                        a=str(f"{pop_likes['owner_id']}")
                    
            n=0
            while n!=int(res1): #–û—Ç–±–∏—Ä–∞—é—Ç—å—Å—è —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–æ—Å—Ç—ã
                all_posts.append(dict([max(pop_id.items(), key=lambda k_v: k_v[1])]))
                delete=dict([max(pop_id.items(), key=lambda k_v: k_v[1])]).keys()
                for d in delete:
                    del pop_id[f"{d}"]
                n+=1
            url_for_pop=''

            for i in range(len(all_posts)): 
                for h in dict(all_posts[int(i)]).keys():

                    url_for_pop+=str(i+1)+'. https://vk.com/wall'+a+'_'+h+name+str(all_posts[int(i)][f'{h}'])+'\n'

closed=0
st=0
keyboard1=''

@bot.message_handler(commands=['start'])

def inline_buttons(message): #–ù–∞—á–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –∫–æ–º–º–∞–Ω–¥–µ —Å—Ç–∞—Ä—Ç
    global closed,keyboard1,st

    if count==0:

        keyboard1 = types.InlineKeyboardMarkup()
        pars_group = types.InlineKeyboardButton(text='–ü–æ –≥—Ä—É–ø–ø–µ/—Å–æ–æ–±—â–µ—Å—Ç–≤—É/–∞–∫–∫–∞—É–Ω—Ç—É üë§', callback_data='pars_group')
        pars_post = types.InlineKeyboardButton(text='–ü–æ –ø–æ—Å—Ç—É üìù ', callback_data='pars_post')
        posts_on_time=types.InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ—Å—Ç—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ üïê ', callback_data='post_on_time')

        keyboard1.add(pars_post)
        keyboard1.add(pars_group)
        keyboard1.add(posts_on_time)

        if closed==0:
            st=bot.send_message(message.from_user.id, text='–ù–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –í–ö', reply_markup=keyboard1,disable_web_page_preview=True)
        else:
            bot.send_message(message.chat.id, text='–ò–∑–≤–∏–Ω–∏—Ç–∏, —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ \n–ù–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –í–ö', reply_markup=keyboard1,disable_web_page_preview=True)
            closed=0


@bot.message_handler(commands=['return'])

def inline_buttons4(message): #–§—É–Ω–∫—Ü–∏—è —Å –≤—ã—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –∫–æ–º–º–∞–Ω–¥–µ return
    global count,n,st,keyboard1

    keyboard1 = types.InlineKeyboardMarkup()
    pars_group = types.InlineKeyboardButton(text='–ü–æ –≥—Ä—É–ø–ø–µ/—Å–æ–æ–±—â–µ—Å—Ç–≤—É/–∞–∫–∫–∞—É–Ω—Ç—É üë§', callback_data='pars_group')
    pars_post = types.InlineKeyboardButton(text='–ü–æ –ø–æ—Å—Ç—É üìù', callback_data='pars_post')
    posts_on_time=types.InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ—Å—Ç—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ üïê', callback_data='post_on_time')

    keyboard1.add(pars_post)
    keyboard1.add(pars_group)
    keyboard1.add(posts_on_time)

    st=bot.send_message(message.from_user.id, text='–ù–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –í–ö',reply_markup=keyboard1,disable_web_page_preview=True)
    count=0
    
    
@bot.message_handler(commands=['return1'])

def inline_buttons2(message): #–§—É–Ω–∫—Ü—è –∫–æ—Ç–æ—Ä–∞—è –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –ø–æ—Å—Ç–∞–º
    global count,count2 

    bot.send_message(message.chat.id,text='–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç')
    count2=2
    count=0

@bot.message_handler(commands=['return2'])

def inline_buttons6(message): #–§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –≥—Ä—É–ø–ø–∞–º
    global count,count2

    bot.send_message(message.chat.id,text='–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É/—Å–æ–æ–±—â–µ—Å—Ç–≤–æ/–∞–∫–∫–∞—É–Ω—Ç')
    count2=1
    count=0


@bot.callback_query_handler(func=lambda call: True)

def questions(call): #–§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞ –∫–∞–∫—É—é –∫–Ω–æ–ø–∫—É –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞
    global count,count2,keyboard1,st

    if call.data=='pars_group':
        bot.send_message(call.message.chat.id, text="–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É/—Å–æ–æ–±—â–µ—Å—Ç–≤–æ/–∞–∫–∫–∞—É–Ω—Ç")
        count2=1

    elif call.data=='pars_post':
        count2=2
        bot.send_message(call.message.chat.id,text='–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç')


    elif call.data=='information':
        count2=3
        answer(call.message)

    elif call.data=='how_many_posts':
        count2=5
        answer(call.message)

    elif call.data=='popular_posts':
        count2=7
        answer(call.message)

    elif call.data=='post_on_time':
        count2=4
        bot.edit_message_text(chat_id = call.message.chat.id,message_id = st.message_id,text='–ò–∑–≤–∏–Ω–∏—Ç–µ, —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ \n–ù–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –í–ö',reply_markup=keyboard1)

    #–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–æ–ø–æ–∫ —Å –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏

    elif call.data=='pop_likes' or call.data=='pop_reposts' or call.data=='pop_views' or call.data=='pop_comments':
        
        if call.data=='pop_likes':
            count2=12
        elif call.data=='pop_reposts':
            count2=9
        elif call.data=='pop_views':
            count2=10
        elif call.data=='pop_comments':
            count2=11
        bot.send_message(call.message.chat.id,text='–°–∫–æ–ª—å–∫–æ –ø–æ–ø. –ø–æ—Å—Ç–æ–≤ –Ω—É–∂–Ω–æ –≤—ã—Å–ª–∞—Ç—å')


@bot.message_handler(content_types=['text'])


def answer(message):
    global count,owner_id,count2,a,keyboard,pars,photo_list,v,count3,res1
    #–ö–æ–ø–∏—Ä—É–µ—Ç url –∞–∫–∫–∞—É–Ω—Ç–∞

    if count2==1: 
        
        if 'https://vk.com/' in message.text:
            owner_id=message.text
            inline_buttons1(message)
        else:
            bot.send_message(message.chat.id,'–û—à–∏–±–∫–∞ ‚ùå\n–í—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É/—Å–æ–æ–±—â–µ—Å—Ç–≤–æ/–∞–∫–∫–∞—É–Ω—Ç')


    elif count2==2:

        if 'https://vk.com/wall' in message.text:
            owner_id=message.text
            inline_buttons1(message)
        else:
            bot.send_message(message.chat.id,'–û—à–∏–±–∫–∞ ‚ùå\n–í—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç')

    #–í—ã—Å—ã–ª–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç–µ

    elif count2==3:
        pars_start=Pars.start()

        if '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π url' in pars_start: #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏
            count2=2
            answer(message)
        else:
            b=Pars.information()
            count3=2
            count=0
            albom_photos=[]
            if v==1:
                for i in photo_list:
                        albom_photos.append(telebot.types.InputMediaPhoto(i))

                bot.send_media_group(message.chat.id, albom_photos)
            bot.send_message(message.chat.id,'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–µ\n'+b+'\n\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ /return  üîÑ\n–ß—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫ /return1   üìù',disable_web_page_preview=True)
            count2=2

    #–í—ã—Å—ã–ª–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ

    elif count2==5:
        pars_start=Pars.start()

        if '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π url' in pars_start: #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏
            count2=1
            answer(message)
        else:
            count3=3
            count2=2
            count=0
            bot.edit_message_text(chat_id = message.chat.id, message_id = a.message_id, text = f"{Pars.how_many_posts()}\n–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ /return üîÑ\n–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ –≥—Ä—É–ø–ø–ø–∞–º /return2 üë§\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ ", reply_markup=keyboard)


    elif count2==7: #–í—ã–±–æ—Ä –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
        keyboard=types.InlineKeyboardMarkup()
        pop_likes = types.InlineKeyboardButton(text='–õ–∞–π–∫–∞–º üëçüèª', callback_data='pop_likes')
        pop_reposts = types.InlineKeyboardButton(text='–†–µ–ø–æ—Å—Ç–∞–º üì£', callback_data='pop_reposts')
        pop_views = types.InlineKeyboardButton(text='–ü—Ä–æ—Å–º–æ—Ç—Ä–∞–º üëÅÔ∏è', callback_data='pop_views')
        pop_all = types.InlineKeyboardButton(text='–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º üí¨', callback_data='pop_comments')
        

        keyboard.add(pop_likes,pop_reposts)
        keyboard.add(pop_views,pop_all)
        bot.edit_message_text(chat_id = message.chat.id, message_id = a.message_id, text = '–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ /return üîÑ \n–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ –≥—Ä—É–ø–ø–∞–º /return2 üë§ \n\n–ü–æ—Å—Ç—ã –±—É–¥—É—Ç –æ—Ç–±–∏—Ä–∞—Ç—å—Å—è –ø–æ', reply_markup=keyboard)
        count=1
        inline_buttons(message)

    elif count2==12 or count2==9 or count2==10 or count2==11: #–ö–æ–ª-–≤–æ –ø–æ—Å—Ç–æ–≤ –¥–ª—è –æ—Ç–±–æ—Ä–∞

        if message.text.isdigit():
            res1=message.text
            bot.send_message(message.chat.id,text='–ü–æ–¥–æ–∂–¥–∏—Ç–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç, –≤–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª-–≤–æ –ø–æ—Å—Ç–æ–≤ üïê')
            inline_buttons1(message)           
        else: #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏
            bot.send_message(message.chat.id,text='–û—à–∏–±–∫–∞ ‚ùå')


def inline_buttons1(message):
    global count2,count,a,keyboard,pars,url_for_pop,start_or_stop,closed,criteries

    if count2==1:
        keyboard = types.InlineKeyboardMarkup()
        pars_post1 = types.InlineKeyboardButton(text='–ù–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø–æ—Å—Ç—É üìù ', callback_data='pars_post')
        how_many_posts = types.InlineKeyboardButton(text='–°–∫–æ–ª—å–∫–æ –ø–æ—Å—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ  üóÇ', callback_data='how_many_posts')
        popular_posts = types.InlineKeyboardButton(text='–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–æ—Å—Ç—ã üìà ', callback_data='popular_posts')
        keyboard.add(pars_post1)
        keyboard.add(how_many_posts)
        keyboard.add(popular_posts)
        a=bot.send_message(message.from_user.id, text='–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ /return üîÑ\n–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ –≥—Ä—É–ø–ø–∞–º /return2 üë§ \n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=keyboard)
        count=1
        inline_buttons(message)



    if count2==2: #–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        keyboard = types.InlineKeyboardMarkup()
        information = types.InlineKeyboardButton(text='–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üì•', callback_data='information')
        keyboard.add(information)
        bot.send_message(message.from_user.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=keyboard)
        count=1
        inline_buttons(message)


    elif count2==12 or count2==9 or count2==10  or count2==11: #–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
        if count2==12:
            criteries='likes'
        elif count2==9:
            criteries='reposts'
        elif count2==10:
            criteries='views'
        elif count2==11:
            criteries='comments'


        start_or_stop=1
        Pars.start()
        Pars.pop()
  
        bot.send_message(message.from_user.id,text=url_for_pop+'\n–ß—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å - –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –Ω—É–∂–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ \n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ /return  üîÑ \n –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –ø–æ –≥—Ä—É–ø–ø–∞–º /return2 üë§ ',disable_web_page_preview=True)


if __name__ == '__main__': #–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    bot.infinity_polling()
